Epoch 1/25:   0%|                                                                                                                                                                     | 0/51 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 195, in <module>
    train()
  File "train.py", line 130, in train
    binary_logits, instance_embeddings = enet_model(images)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/kunal6/mp-release-sp25/src/mp1/models/enet.py", line 416, in forward
    x, max_indices2_0 = self.downsample2_0(x)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/kunal6/mp-release-sp25/src/mp1/models/enet.py", line 249, in forward
    main = torch.cat((main, padding), 1)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 64.00 MiB. GPU 0 has a total capacity of 4.93 GiB of which 70.88 MiB is free. Including non-PyTorch memory, this process has 4.31 GiB memory in use. Of the allocated memory 4.20 GiB is allocated by PyTorch, and 41.53 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
Traceback (most recent call last):
  File "train.py", line 195, in <module>
    train()
  File "train.py", line 130, in train
    binary_logits, instance_embeddings = enet_model(images)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/kunal6/mp-release-sp25/src/mp1/models/enet.py", line 416, in forward
    x, max_indices2_0 = self.downsample2_0(x)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/kunal6/mp-release-sp25/src/mp1/models/enet.py", line 249, in forward
    main = torch.cat((main, padding), 1)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 64.00 MiB. GPU 0 has a total capacity of 4.93 GiB of which 70.88 MiB is free. Including non-PyTorch memory, this process has 4.31 GiB memory in use. Of the allocated memory 4.20 GiB is allocated by PyTorch, and 41.53 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
