Epoch 1/25:   0%|                                                                                   | 0/402 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "train.py", line 196, in <module>
    train()
  File "train.py", line 131, in train
    binary_logits, instance_embeddings = enet_model(images)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/kunal6/mp1/models/enet.py", line 451, in forward
    x_binary = self.regular_binary_5_1(x_binary)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/kunal6/mp1/models/enet.py", line 151, in forward
    return self.out_activation(out)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/activation.py", line 104, in forward
    return F.relu(input, inplace=self.inplace)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/functional.py", line 1500, in relu
    result = torch.relu(input)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 16.00 MiB. GPU 0 has a total capacity of 4.93 GiB of which 28.62 MiB is free. Process 48384 has 2.50 GiB memory in use. Including non-PyTorch memory, this process has 2.04 GiB memory in use. Of the allocated memory 1.96 GiB is allocated by PyTorch, and 12.43 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
Traceback (most recent call last):
  File "train.py", line 196, in <module>
    train()
  File "train.py", line 131, in train
    binary_logits, instance_embeddings = enet_model(images)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/kunal6/mp1/models/enet.py", line 451, in forward
    x_binary = self.regular_binary_5_1(x_binary)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/kunal6/mp1/models/enet.py", line 151, in forward
    return self.out_activation(out)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/modules/activation.py", line 104, in forward
    return F.relu(input, inplace=self.inplace)
  File "/home/kunal6/.local/lib/python3.8/site-packages/torch/nn/functional.py", line 1500, in relu
    result = torch.relu(input)
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 16.00 MiB. GPU 0 has a total capacity of 4.93 GiB of which 28.62 MiB is free. Process 48384 has 2.50 GiB memory in use. Including non-PyTorch memory, this process has 2.04 GiB memory in use. Of the allocated memory 1.96 GiB is allocated by PyTorch, and 12.43 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
